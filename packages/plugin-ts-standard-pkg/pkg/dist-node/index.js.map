{"version":3,"file":"index.js","sources":["../dist-src/index.js"],"sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport execa from 'execa';\nimport { MessageError } from '@pika/types';\nimport { Lint } from 'standard-pkg';\nimport * as tsc from 'typescript';\nfunction formatTscParserErrors(errors) {\n    return errors.map(s => JSON.stringify(s, null, 4)).join('\\n');\n}\nfunction readCompilerOptions(configPath) {\n    // First step: Let tsc pick up the config.\n    const loaded = tsc.readConfigFile(configPath, file => {\n        const read = tsc.sys.readFile(file);\n        // See https://github.com/Microsoft/TypeScript/blob/a757e8428410c2196886776785c16f8f0c2a62d9/src/compiler/sys.ts#L203 :\n        // `readFile` returns `undefined` in case the file does not exist!\n        if (!read) {\n            throw new Error(`ENOENT: no such file or directory, open '${configPath}'`);\n        }\n        return read;\n    });\n    // In case of an error, we cannot go further - the config is malformed.\n    if (loaded.error) {\n        throw new Error(JSON.stringify(loaded.error, null, 4));\n    }\n    // Second step: Parse the config, resolving all potential references.\n    const basePath = path.dirname(configPath); // equal to \"getDirectoryPath\" from ts, at least in our case.\n    const parsedConfig = tsc.parseJsonConfigFileContent(loaded.config, tsc.sys, basePath);\n    // In case the config is present, it already contains possibly merged entries from following the\n    // 'extends' entry, thus it is not required to follow it manually.\n    // This procedure does NOT throw, but generates a list of errors that can/should be evaluated.\n    if (parsedConfig.errors.length > 0) {\n        const formattedErrors = formatTscParserErrors(parsedConfig.errors);\n        throw new Error(`Some errors occurred while attempting to read from ${configPath}: ${formattedErrors}`);\n    }\n    return parsedConfig.options;\n}\nfunction getTsConfigPath(options, cwd) {\n    return path.resolve(cwd, options.tsconfig || 'tsconfig.json');\n}\nfunction getTscBin(cwd) {\n    try {\n        return require.resolve('typescript/bin/tsc', { paths: [cwd] });\n    }\n    catch (err) {\n        // ignore err\n        return null;\n    }\n}\nexport async function beforeBuild({ cwd, options, reporter }) {\n    if (!getTscBin(cwd)) {\n        throw new MessageError('\"tsc\" executable not found. Make sure \"typescript\" is installed as a project dependency.');\n    }\n    const tsConfigPath = getTsConfigPath(options, cwd);\n    if (!fs.existsSync(tsConfigPath)) {\n        throw new MessageError('\"tsconfig.json\" manifest not found.');\n    }\n    const tsConfig = readCompilerOptions(tsConfigPath);\n    const { target, module: mod } = tsConfig;\n    const buildTarget = tsc.ScriptTarget.ES2020 || tsc.ScriptTarget.ES2019;\n    if (!tsc.ScriptTarget.ES2020) {\n        reporter.warning(`tsconfig.json [compilerOptions.target] - This version of TypeScript does not support ES2020 compilation. Falling back to \"ES2019\".`);\n    }\n    if (target !== buildTarget) {\n        const _target = tsc.ScriptTarget[target] || '';\n        reporter.warning(`tsconfig.json [compilerOptions.target] should be \"${tsc.ScriptTarget[buildTarget]}\", but found \"${_target ? _target : target}\". You may encounter problems building.`);\n    }\n    if (mod !== tsc.ModuleKind.ESNext) {\n        const _mod = tsc.ModuleKind[mod] || '';\n        reporter.warning(`tsconfig.json [compilerOptions.module] should be \"ESNext\", but found \"${_mod ? _mod : mod}\". You may encounter problems building.`);\n    }\n}\nexport async function beforeJob({ cwd }) {\n    const srcDirectory = path.join(cwd, 'src/');\n    if (!fs.existsSync(srcDirectory)) {\n        throw new MessageError('@pika/pack expects a standard package format, where package source must live in \"src/\".');\n    }\n    if (!fs.existsSync(path.join(cwd, 'src/index.ts')) && !fs.existsSync(path.join(cwd, 'src/index.tsx'))) {\n        throw new MessageError('@pika/pack expects a standard package format, where the package entrypoint must live at \"src/index\".');\n    }\n}\nexport async function afterJob({ out, reporter }) {\n    reporter.info('Linting with standard-pkg...');\n    const linter = new Lint(path.join(out, 'dist-src'), { ignoreExtensions: true });\n    await linter.init();\n    linter.summary();\n}\nexport function manifest(newManifest) {\n    newManifest.source = newManifest.source || 'dist-src/index.js';\n    newManifest.types = newManifest.types || 'dist-types/index.d.ts';\n    return newManifest;\n}\nexport async function build({ cwd, out, options, reporter }) {\n    const additionalArgs = options.args || [];\n    const result = execa(getTscBin(cwd), [\n        '--outDir',\n        path.join(out, 'dist-src/'),\n        '-d',\n        '--declarationDir',\n        path.join(out, 'dist-types/'),\n        '--project',\n        getTsConfigPath(options, cwd),\n        '--target',\n        'es2020',\n        '--module',\n        'esnext',\n        '--noEmit',\n        'false',\n        '--sourceMap',\n        'false',\n        ...additionalArgs,\n    ], { cwd });\n    result.stderr.pipe(process.stderr);\n    result.stdout.pipe(process.stdout);\n    await result.catch(err => {\n        // Small formatting improvement.\n        console.log('');\n        throw err;\n    });\n    reporter.created(path.join(out, 'dist-src', 'index.js'), 'esnext');\n    reporter.created(path.join(out, 'dist-types', 'index.d.ts'), 'types');\n}\n"],"names":["formatTscParserErrors","errors","map","s","JSON","stringify","join","readCompilerOptions","configPath","loaded","tsc","file","read","readFile","Error","error","basePath","path","dirname","parsedConfig","config","length","formattedErrors","options","getTsConfigPath","cwd","resolve","tsconfig","getTscBin","require","paths","err","beforeBuild","reporter","MessageError","tsConfigPath","fs","existsSync","tsConfig","target","module","mod","buildTarget","ES2020","ES2019","warning","_target","ESNext","_mod","beforeJob","srcDirectory","afterJob","out","info","linter","Lint","ignoreExtensions","init","summary","manifest","newManifest","source","types","build","additionalArgs","args","result","execa","stderr","pipe","process","stdout","catch","console","log","created"],"mappings":"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"}