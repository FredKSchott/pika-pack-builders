{"version":3,"file":"index.js","sources":["../dist-src/index.js"],"sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport execa from 'execa';\nimport { MessageError } from '@pika/types';\nimport { Lint } from 'standard-pkg';\nimport * as tsc from 'typescript';\nfunction formatTscParserErrors(errors) {\n    return errors.map(s => JSON.stringify(s, null, 4)).join('\\n');\n}\nfunction readCompilerOptions(configPath) {\n    // First step: Let tsc pick up the config.\n    const loaded = tsc.readConfigFile(configPath, file => {\n        const read = tsc.sys.readFile(file);\n        // See https://github.com/Microsoft/TypeScript/blob/a757e8428410c2196886776785c16f8f0c2a62d9/src/compiler/sys.ts#L203 :\n        // `readFile` returns `undefined` in case the file does not exist!\n        if (!read) {\n            throw new Error(`ENOENT: no such file or directory, open '${configPath}'`);\n        }\n        return read;\n    });\n    // In case of an error, we cannot go further - the config is malformed.\n    if (loaded.error) {\n        throw new Error(JSON.stringify(loaded.error, null, 4));\n    }\n    // Second step: Parse the config, resolving all potential references.\n    const basePath = path.dirname(configPath); // equal to \"getDirectoryPath\" from ts, at least in our case.\n    const parsedConfig = tsc.parseJsonConfigFileContent(loaded.config, tsc.sys, basePath);\n    // In case the config is present, it already contains possibly merged entries from following the\n    // 'extends' entry, thus it is not required to follow it manually.\n    // This procedure does NOT throw, but generates a list of errors that can/should be evaluated.\n    if (parsedConfig.errors.length > 0) {\n        const formattedErrors = formatTscParserErrors(parsedConfig.errors);\n        throw new Error(`Some errors occurred while attempting to read from ${configPath}: ${formattedErrors}`);\n    }\n    return parsedConfig.options;\n}\nfunction getTsConfigPath(options, cwd) {\n    return path.resolve(cwd, options.tsconfig || 'tsconfig.json');\n}\nfunction getTscBin(cwd) {\n    try {\n        return require.resolve('typescript/bin/tsc', { paths: [cwd] });\n    }\n    catch (err) {\n        // ignore err\n        return null;\n    }\n}\nexport async function beforeBuild({ cwd, options, reporter }) {\n    if (!getTscBin(cwd)) {\n        throw new MessageError('\"tsc\" executable not found. Make sure \"typescript\" is installed as a project dependency.');\n    }\n    const tsConfigPath = getTsConfigPath(options, cwd);\n    if (!fs.existsSync(tsConfigPath)) {\n        throw new MessageError('\"tsconfig.json\" manifest not found.');\n    }\n    const tsConfig = readCompilerOptions(tsConfigPath);\n    const { target, module: mod } = tsConfig;\n    if (target !== tsc.ScriptTarget.ES2019) {\n        const _target = tsc.ScriptTarget[target] || '';\n        reporter.warning(`tsconfig.json [compilerOptions.target] should be \"es2019\", but found \"${_target ? _target.toLowerCase() : target}\". You may encounter problems building.`);\n    }\n    if (mod !== tsc.ModuleKind.ESNext) {\n        const _mod = tsc.ModuleKind[mod] || '';\n        reporter.warning(`tsconfig.json [compilerOptions.module] should be \"esnext\", but found \"${_mod ? _mod.toLowerCase() : mod}\". You may encounter problems building.`);\n    }\n}\nexport async function beforeJob({ cwd }) {\n    const srcDirectory = path.join(cwd, 'src/');\n    if (!fs.existsSync(srcDirectory)) {\n        throw new MessageError('@pika/pack expects a standard package format, where package source must live in \"src/\".');\n    }\n    if (!fs.existsSync(path.join(cwd, 'src/index.ts')) && !fs.existsSync(path.join(cwd, 'src/index.tsx'))) {\n        throw new MessageError('@pika/pack expects a standard package format, where the package entrypoint must live at \"src/index\".');\n    }\n}\nexport async function afterJob({ out, reporter }) {\n    reporter.info('Linting with standard-pkg...');\n    const linter = new Lint(path.join(out, 'dist-src'), { ignoreExtensions: true });\n    await linter.init();\n    linter.summary();\n}\nexport function manifest(newManifest) {\n    newManifest.source = newManifest.source || 'dist-src/index.js';\n    newManifest.types = newManifest.types || 'dist-types/index.d.ts';\n    return newManifest;\n}\nexport async function build({ cwd, out, options, reporter }) {\n    const additionalArgs = options.args || [];\n    const result = execa(getTscBin(cwd), [\n        '--outDir',\n        path.join(out, 'dist-src/'),\n        '-d',\n        '--declarationDir',\n        path.join(out, 'dist-types/'),\n        '--project',\n        getTsConfigPath(options, cwd),\n        '--target',\n        'es2019',\n        '--module',\n        'esnext',\n        '--noEmit',\n        'false',\n        '--sourceMap',\n        'false',\n        ...additionalArgs,\n    ], { cwd });\n    result.stderr.pipe(process.stderr);\n    result.stdout.pipe(process.stdout);\n    await result.catch(err => {\n        // Small formatting improvement.\n        console.log('');\n        throw err;\n    });\n    reporter.created(path.join(out, 'dist-src', 'index.js'), 'esnext');\n    reporter.created(path.join(out, 'dist-types', 'index.d.ts'), 'types');\n}\n"],"names":["formatTscParserErrors","errors","map","s","JSON","stringify","join","readCompilerOptions","configPath","loaded","tsc","file","read","readFile","Error","error","basePath","path","dirname","parsedConfig","config","length","formattedErrors","options","getTsConfigPath","cwd","resolve","tsconfig","getTscBin","require","paths","err","beforeBuild","reporter","MessageError","tsConfigPath","fs","existsSync","tsConfig","target","module","mod","ES2019","_target","warning","toLowerCase","ESNext","_mod","beforeJob","srcDirectory","afterJob","out","info","linter","Lint","ignoreExtensions","init","summary","manifest","newManifest","source","types","build","additionalArgs","args","result","execa","stderr","pipe","process","stdout","catch","console","log","created"],"mappings":"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"}